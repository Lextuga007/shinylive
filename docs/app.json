[{"name":"app.R","content":"library(shiny)\r\n\r\nchoices_list <- c(\"SQL\", \"Python\", \"R\")\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Basic Demo\"), # Title\r\n  sidebarLayout(\r\n  sidebarPanel(\r\n    checkboxGroupInput(\r\n    inputId = \"name1\",\r\n    label = \"What are your favourite languages?\",\r\n    choices = choices_list\r\n  ),\r\n\r\n  actionButton(inputId = \"button\",\r\n               label = \"List the selections\",\r\n               icon = icon(\"question\"))\r\n),\r\nmainPanel(textOutput(outputId = \"name3\"))\r\n)\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n\r\n  debug_msg <- function(...) {\r\n    is_local <- Sys.getenv('SHINY_PORT') == \"\"\r\n    in_shiny <- !is.null(shiny::getDefaultReactiveDomain())\r\n    txt <- toString(list(...))\r\n    if (is_local) message(txt)\r\n    if (in_shiny) shinyjs::runjs(sprintf(\"console.debug(\\\"%s\\\")\", txt))\r\n  }\r\n\r\n  observeEvent(input$button, {\r\n\r\n    debug_msg(\"testing\")\r\n\r\n    output$name3 <- renderText(input$name1)\r\n  })\r\n\r\n  # output$name3 <- renderText({\r\n  #   input$name1\r\n  # }) |>\r\n  #   bindEvent(input$button)\r\n\r\n}\r\n\r\nshinyApp(ui, server)","type":"text"},{"name":"DESCRIPTION","content":"Title: Hello Shiny!\r\nAuthor: RStudio, Inc.\r\nAuthorUrl: http://www.rstudio.com/\r\nLicense: MIT\r\nDisplayMode: Showcase\r\nTags: small-app\r\nType: Shiny\r\n","type":"text"},{"name":"Readme.md","content":"This is a small app example\r\n","type":"text"}]
